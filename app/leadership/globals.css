@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --font-giest: var(--font-geist), sans-serif;
  --font-space_grotesk: var(--font-space-grotesk), sans-serif;
  --font-cinzel: var(--font-cinzel), serif;

  --color-background: hsla(var(--background));
  --color-foreground: hsla(var(--foreground));

  --color-card: hsla(var(--card));
  --color-card-foreground: hsla(var(--card-foreground));

  --color-popover: hsla(var(--popover));
  --color-popover-foreground: hsla(var(--popover-foreground));

  --color-primary: hsla(var(--primary));
  --color-primary-foreground: hsla(var(--primary-foreground));

  --color-secondary: hsla(var(--secondary));
  --color-secondary-foreground: hsla(var(--secondary-foreground));

  --color-muted: hsla(var(--muted));
  --color-muted-foreground: hsla(var(--muted-foreground));

  --color-accent: hsla(var(--accent));
  --color-accent-foreground: hsla(var(--accent-foreground));

  --color-destructive: hsla(var(--destructive));
  --color-destructive-foreground: hsla(var(--destructive-foreground));

  --color-border: hsla(var(--border));
  --color-input: hsla(var(--input));
  --color-ring: hsla(var(--ring));

  --color-chart-1: hsla(var(--chart-1));
  --color-chart-2: hsla(var(--chart-2));
  --color-chart-3: hsla(var(--chart-3));
  --color-chart-4: hsla(var(--chart-4));
  --color-chart-5: hsla(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/


@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}


@layer base {
  @keyframes door-open {
    0% {
      transform: translateY(15%);
      opacity: 0;
    }

    100% {
      transform: translateY(0%);
      opacity: 1;
    };
  };

  @keyframes rad {
    0% {
      background-image: radial-gradient(circle at 0% 100%, #000000, #00000000);
    }

    100% {
      background-image: radial-gradient(circle at 0% 100%, #00000000, #00000000);
    };
  };

  .animate-rad {
    animation: rad 2s ease-in-out forwards;
  }
  .animate-door-open {
    animation: door-open 2s ease-in-out forwards;
  };

  @keyframes fade-in {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    };
  }


  :root  {
    --background: 240 0% 100%;
    --foreground: 240 0% 5%;
    --card: 240 0% 90%;
    --card-foreground: 240 0% 10%;
    --popover: 240 0% 95%;
    --popover-foreground: 240 95% 5%;
    --primary: 240 0% 90%;
    --primary-foreground: 0 0% 100%;
    --secondary: 240 10% 70%;
    --secondary-foreground: 0 0% 0%;
    --muted: 202 10% 85%;
    --muted-foreground: 240 0% 35%;
    --accent: 202 10% 80%;
    --accent-foreground: 240 0% 10%;
    --destructive: 0 50% 30%;
    --destructive-foreground: 240 0% 90%;
    --border: 240 20% 50%;
    --input: 240 20% 18%;
    --ring: 240 0% 0%;
    --radius: 0.3rem;
  }
  .dark  {
    --background: 240 10% 0%;
    --foreground: 240 0% 90%;
    --card: 240 0% 5%;
    --card-foreground: 240 0% 90%;
    --popover: 240 10% 5%;
    --popover-foreground: 240 0% 90%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 100%;
    --secondary: 240 10% 10%;
    --secondary-foreground: 0 0% 100%;
    --muted: 202 10% 15%;
    --muted-foreground: 240 0% 60%;
    --accent: 202 10% 15%;
    --accent-foreground: 240 0% 90%;
    --destructive: 0 50% 30%;
    --destructive-foreground: 240 0% 90%;
    --border: 240 20% 18%;
    --input: 240 20% 18%;
    --ring: 240 0% 0%;
    --radius: 0.3rem;
  }
  

}


@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background max-h-dvh max-w-dvw text-foreground;
  }
}